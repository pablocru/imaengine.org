---
import { getBlogCollection, getBlogEntries } from "@utils/get-static-paths-filtered";
import { getEntry } from "astro:content";
import { Picture } from "astro:assets";
import BaseLayout from "@layouts/BaseLayout.astro";
import Calendar from "@components/icons/Calendar.astro";
import Feed from "@components/Feed.astro";
import FormattedDate from "@components/FormattedDate.astro";
import LinkedInIconLink from "@components/iconLinks/LinkedInIconLink.astro";

export async function getStaticPaths() {
  const blogEntries = await getBlogCollection();

  return blogEntries.map((post) => ({
    params: { blogPost: post.slug },
    props: { post },
  }));
}

const {
  post: {
    data: {
      author,
      cover,
      pubDate,
      relatedPosts,
      seoDescription,
      seoTitle,
      tabTitle,
      title,
    },
    render,
  },
} = Astro.props;

const {
  data: { alt: coverAlt, metadata: coverMetadata },
} = await getEntry(cover);

const { Content } = await render();

const filteredPosts = await getBlogEntries(relatedPosts);

const {
  data: { description, label, linkedIn, name, profilePicture },
} = await getEntry(author);

const {
  data: { alt: profilePictureAlt, metadata: profilePictureMetadata },
} = await getEntry(profilePicture);
---

<BaseLayout seoDescription={seoDescription} seoTitle={seoTitle} tabTitle={tabTitle}>
  <main>
    <section class="small-layout">
      <h1>{title}</h1>

      <aside id="publication-date">
        <p>
          <Calendar />
          <FormattedDate date={pubDate} />
        </p>
      </aside>

      <Picture
        src={coverMetadata}
        alt={coverAlt}
        width={885}
        widths={[480, 885]}
        sizes="(max-width: 885px) 100vw, 885px"
        formats={["avif", "webp"]}
        loading="eager"
        class="fit-container"
      />

      <section id="main-content">
        <Content />
      </section>
    </section>
  </main>

  <aside class="postAuthor">
    <div class="large-layout">
      <h2>About the author</h2>
      <Picture
        src={profilePictureMetadata}
        alt={profilePictureAlt}
        width={200}
        formats={["avif", "webp"]}
      />
      <h3>{name}</h3>
      <h4>{label}</h4>
      <p>{description}</p>
      <LinkedInIconLink href={linkedIn} />
    </div>
  </aside>

  {
    !!filteredPosts.length && (
      <aside class="relatedPost">
        <div class="large-layout">
          <h2>You might also like</h2>
          <Feed posts={filteredPosts} />
        </div>
      </aside>
    )
  }
</BaseLayout>

<style>
  :root {
    /* Use the same white space between sections */
    --section-white-space: 4em;
  }

  main {
    padding-bottom: var(--section-white-space);
  }

  .postAuthor,
  .relatedPost {
    padding-block: var(--section-white-space);

    /* Use a different bg-color to visually signal the end of the post */
    background: var(--contrast-white);
  }

  #publication-date {
    margin-block: 1em;
    font-size: smaller;

    /* Place a line before and after publication date */
    --border-style: 1px solid gray;
    border-top: var(--border-style);
    border-bottom: var(--border-style);
  }

  @supports (display: flex) {
    /* Place calendar icon and date centered vertically */
    #publication-date p {
      display: flex;
      gap: 0.35em;
    }
  }

  #main-content {
    /* Add some space between the hero image and the main content */
    padding-top: 0.5em;
  }

  :is(.postAuthor, .relatedPost) h2 {
    /* Manage white spaces with the padding of each section */
    margin-top: 0;
  }

  .relatedPost {
    /* Create a visual separation between sections */
    border-top: 1px solid lightgrey;
  }
</style>
