---
import { getBlogCollection, getBlogEntries } from "@utils/get-static-paths-filtered";
import { getEntry } from "astro:content";
import { Picture } from "astro:assets";
import BaseLayout from "@layouts/BaseLayout.astro";
import Feed from "@components/Feed.astro";
import LinkedInIconLink from "@components/iconLink/LinkedIn.astro";
import PostMetadata from "@components/PostMetadata.astro";

export async function getStaticPaths() {
  const blogEntries = await getBlogCollection();

  return blogEntries.map((post) => ({
    params: { blogPost: post.slug },
    props: { post },
  }));
}

const {
  post: {
    body,
    data: {
      author,
      cover,
      pubDate,
      relatedPosts,
      seoDescription,
      seoTitle,
      tabTitle,
      title,
    },
    render,
  },
} = Astro.props;

const {
  data: { alt: coverAlt, metadata: coverMetadata },
} = await getEntry(cover);

const { Content } = await render();

const filteredPosts = await getBlogEntries(relatedPosts);

const {
  data: { description, label, linkedIn, name, profilePicture },
} = await getEntry(author);

const {
  data: { alt: profilePictureAlt, metadata: profilePictureMetadata },
} = await getEntry(profilePicture);
---

<BaseLayout seoTags={{ seoDescription, seoTitle, author: name }} tabTitle={tabTitle}>
  <main>
    <section class="small-layout">
      <h1>{title}</h1>

      <PostMetadata pubDate={pubDate} postBody={body} />

      <Picture
        src={coverMetadata}
        alt={coverAlt}
        width={885}
        widths={[480, 885]}
        sizes="(max-width: 885px) 100vw, 885px"
        formats={["avif", "webp"]}
        loading="eager"
        class="fit-container"
      />

      <section id="main-content">
        <Content />
      </section>
    </section>
  </main>

  <aside class="postAuthor">
    <section class="small-layout">
      <h2>About the author</h2>

      <section class="author-overview">
        <Picture
          src={profilePictureMetadata}
          alt={profilePictureAlt}
          width={200}
          formats={["avif", "webp"]}
          class="author-image"
        />

        <div class="author-data">
          <h3>{name}</h3>
          <h4>{label}</h4>
          <p>{description}</p>
        </div>

        <div class="cta">
          <LinkedInIconLink href={linkedIn} />
        </div>
      </section>
    </section>
  </aside>

  {
    !!filteredPosts.length && (
      <aside class="relatedPost">
        <div class="small-layout">
          <h2>You might also like</h2>
          <Feed posts={filteredPosts} />
        </div>
      </aside>
    )
  }
</BaseLayout>

<style>
  :root {
    /* Use the same white space between sections */
    --section-white-space: 4em;
  }

  main {
    padding-bottom: var(--section-white-space);
  }

  .postAuthor,
  .relatedPost {
    padding-block: var(--section-white-space);

    /* Use a different bg-color to visually signal the end of the post */
    background: var(--contrast-white);
  }

  .post-metadata {
    margin-block: 1em;
    font-size: smaller;

    /* Place a line before and after publication date */
    --border-style: 1px solid gray;
    border-top: var(--border-style);
    border-bottom: var(--border-style);
  }

  #main-content {
    /* Add some space between the hero image and the main content */
    padding-top: 0.5em;
  }

  :is(.postAuthor, .relatedPost) h2 {
    /* Manage white spaces with the padding of each section */
    margin-top: 0;
  }

  @supports (display: grid) and (display: flex) {
    /* Create a vertical card to display author information */
    .postAuthor .author-overview {
      display: grid;
      grid-template-areas:
        "picture"
        "data"
        "cta";
      gap: 1em;
    }
    .postAuthor .author-image {
      grid-area: picture;
    }
    .postAuthor .author-data {
      grid-area: data;
    }
    .postAuthor .cta {
      grid-area: cta;
    }

    /* Remove margins to manage white spaces with the grid gap */
    .postAuthor .author-data p {
      margin-bottom: 0;
    }
    .postAuthor :is(h3, h4) {
      margin: 0;
    }

    /* Styles applied on bigger screens */
    @media screen and (min-width: 580px) {
      /* Place card in a horizontal layout */
      .postAuthor .author-overview {
        grid-template-areas:
          "picture data"
          "cta .";
      }
      /* Center LinkedIn button depending on the image width */
      .postAuthor .cta {
        display: flex;
        justify-content: center;
      }
    }
  }

  .relatedPost {
    /* Create a visual separation between sections */
    border-top: 1px solid lightgrey;
  }
</style>
